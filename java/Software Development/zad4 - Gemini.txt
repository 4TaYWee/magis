import java.lang.management.*;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

public class ResourceMonitor {

    private static final int REFRESH_RATE = 1000; // Milisekundy

    public static void main(String[] args) {
        ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();
        executor.scheduleAtFixedRate(() -> monitorResources(), 0, REFRESH_RATE, TimeUnit.MILLISECONDS);
    }

    private static void monitorResources() {
        OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();
        double cpuLoad = os.getSystemCpuLoad();
        long totalMemory = os.getTotalPhysicalMemorySize();
        long freeMemory = os.getFreePhysicalMemorySize();

        System.out.println("Obciążenie CPU: " + (cpuLoad * 100) + "%");
        System.out.println("Pamięć RAM (całkowita/wolna): " + (totalMemory / 1024 / 1024 / 1024) + " GB / " + (freeMemory / 1024 / 1024 / 1024) + " GB");
    }
}
